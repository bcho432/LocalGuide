{"ast":null,"code":"var _jsxFileName = \"/Users/bryancho/Desktop/Personal_Projects/rest_recommender/client/src/contexts/LocationContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationContext = /*#__PURE__*/createContext(undefined);\nconst initialState = {\n  currentLocation: null,\n  isLoading: false,\n  error: null,\n  hasPermission: false\n};\nfunction locationReducer(state, action) {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_LOCATION':\n      return {\n        ...state,\n        currentLocation: action.payload,\n        error: null\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      };\n    case 'SET_PERMISSION':\n      return {\n        ...state,\n        hasPermission: action.payload\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n}\nexport function LocationProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(locationReducer, initialState);\n\n  // Get address from coordinates using reverse geocoding\n  const getAddressFromCoords = async (lat, lng) => {\n    try {\n      const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);\n      const data = await response.json();\n      if (data.results && data.results.length > 0) {\n        return data.results[0].formatted_address;\n      }\n      return '';\n    } catch (error) {\n      console.error('Error getting address:', error);\n      return '';\n    }\n  };\n  const getCurrentLocation = async () => {\n    if (!navigator.geolocation) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Geolocation is not supported by this browser'\n      });\n      return;\n    }\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n    try {\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 300000 // 5 minutes\n        });\n      });\n      const {\n        latitude: lat,\n        longitude: lng\n      } = position.coords;\n\n      // Get address from coordinates\n      const address = await getAddressFromCoords(lat, lng);\n      const location = {\n        lat,\n        lng,\n        address\n      };\n      dispatch({\n        type: 'SET_LOCATION',\n        payload: location\n      });\n      dispatch({\n        type: 'SET_PERMISSION',\n        payload: true\n      });\n\n      // Save to localStorage\n      localStorage.setItem('lastLocation', JSON.stringify(location));\n      toast.success('Location updated successfully');\n    } catch (error) {\n      let errorMessage = 'Failed to get location';\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = 'Location permission denied. Please enable location access.';\n          dispatch({\n            type: 'SET_PERMISSION',\n            payload: false\n          });\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = 'Location information unavailable.';\n          break;\n        case error.TIMEOUT:\n          errorMessage = 'Location request timed out.';\n          break;\n        default:\n          errorMessage = error.message || 'An unknown error occurred.';\n      }\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const setLocation = location => {\n    dispatch({\n      type: 'SET_LOCATION',\n      payload: location\n    });\n    localStorage.setItem('lastLocation', JSON.stringify(location));\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n\n  // Load last known location on mount\n  useEffect(() => {\n    const savedLocation = localStorage.getItem('lastLocation');\n    if (savedLocation) {\n      try {\n        const location = JSON.parse(savedLocation);\n        dispatch({\n          type: 'SET_LOCATION',\n          payload: location\n        });\n      } catch (error) {\n        console.error('Error parsing saved location:', error);\n      }\n    }\n  }, []);\n\n  // Check geolocation permission on mount\n  useEffect(() => {\n    if (navigator.permissions) {\n      navigator.permissions.query({\n        name: 'geolocation'\n      }).then(result => {\n        dispatch({\n          type: 'SET_PERMISSION',\n          payload: result.state === 'granted'\n        });\n        result.addEventListener('change', () => {\n          dispatch({\n            type: 'SET_PERMISSION',\n            payload: result.state === 'granted'\n          });\n        });\n      });\n    }\n  }, []);\n  const value = {\n    ...state,\n    getCurrentLocation,\n    setLocation,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(LocationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(LocationProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = LocationProvider;\nexport function useLocation() {\n  _s2();\n  const context = useContext(LocationContext);\n  if (context === undefined) {\n    throw new Error('useLocation must be used within a LocationProvider');\n  }\n  return context;\n}\n_s2(useLocation, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LocationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","toast","jsxDEV","_jsxDEV","LocationContext","undefined","initialState","currentLocation","isLoading","error","hasPermission","locationReducer","state","action","type","payload","LocationProvider","children","_s","dispatch","getAddressFromCoords","lat","lng","response","fetch","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","data","json","results","length","formatted_address","console","getCurrentLocation","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","latitude","longitude","coords","address","location","localStorage","setItem","JSON","stringify","success","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","message","setLocation","clearError","savedLocation","getItem","parse","permissions","query","name","then","result","addEventListener","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLocation","_s2","context","Error","$RefreshReg$"],"sources":["/Users/bryancho/Desktop/Personal_Projects/rest_recommender/client/src/contexts/LocationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\n\ninterface Location {\n  lat: number;\n  lng: number;\n  address?: string;\n}\n\ninterface LocationState {\n  currentLocation: Location | null;\n  isLoading: boolean;\n  error: string | null;\n  hasPermission: boolean;\n}\n\ntype LocationAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_LOCATION'; payload: Location }\n  | { type: 'SET_ERROR'; payload: string }\n  | { type: 'SET_PERMISSION'; payload: boolean }\n  | { type: 'CLEAR_ERROR' };\n\ninterface LocationContextType extends LocationState {\n  getCurrentLocation: () => Promise<void>;\n  setLocation: (location: Location) => void;\n  clearError: () => void;\n}\n\nconst LocationContext = createContext<LocationContextType | undefined>(undefined);\n\nconst initialState: LocationState = {\n  currentLocation: null,\n  isLoading: false,\n  error: null,\n  hasPermission: false,\n};\n\nfunction locationReducer(state: LocationState, action: LocationAction): LocationState {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    case 'SET_LOCATION':\n      return {\n        ...state,\n        currentLocation: action.payload,\n        error: null,\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case 'SET_PERMISSION':\n      return {\n        ...state,\n        hasPermission: action.payload,\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function LocationProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(locationReducer, initialState);\n\n  // Get address from coordinates using reverse geocoding\n  const getAddressFromCoords = async (lat: number, lng: number): Promise<string> => {\n    try {\n      const response = await fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n      );\n      const data = await response.json();\n      \n      if (data.results && data.results.length > 0) {\n        return data.results[0].formatted_address;\n      }\n      return '';\n    } catch (error) {\n      console.error('Error getting address:', error);\n      return '';\n    }\n  };\n\n  const getCurrentLocation = async () => {\n    if (!navigator.geolocation) {\n      dispatch({ type: 'SET_ERROR', payload: 'Geolocation is not supported by this browser' });\n      return;\n    }\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'CLEAR_ERROR' });\n\n    try {\n      const position = await new Promise<GeolocationPosition>((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 300000, // 5 minutes\n        });\n      });\n\n      const { latitude: lat, longitude: lng } = position.coords;\n      \n      // Get address from coordinates\n      const address = await getAddressFromCoords(lat, lng);\n      \n      const location: Location = {\n        lat,\n        lng,\n        address,\n      };\n\n      dispatch({ type: 'SET_LOCATION', payload: location });\n      dispatch({ type: 'SET_PERMISSION', payload: true });\n      \n      // Save to localStorage\n      localStorage.setItem('lastLocation', JSON.stringify(location));\n      \n      toast.success('Location updated successfully');\n    } catch (error: any) {\n      let errorMessage = 'Failed to get location';\n      \n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = 'Location permission denied. Please enable location access.';\n          dispatch({ type: 'SET_PERMISSION', payload: false });\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = 'Location information unavailable.';\n          break;\n        case error.TIMEOUT:\n          errorMessage = 'Location request timed out.';\n          break;\n        default:\n          errorMessage = error.message || 'An unknown error occurred.';\n      }\n      \n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      toast.error(errorMessage);\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const setLocation = (location: Location) => {\n    dispatch({ type: 'SET_LOCATION', payload: location });\n    localStorage.setItem('lastLocation', JSON.stringify(location));\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  // Load last known location on mount\n  useEffect(() => {\n    const savedLocation = localStorage.getItem('lastLocation');\n    if (savedLocation) {\n      try {\n        const location = JSON.parse(savedLocation);\n        dispatch({ type: 'SET_LOCATION', payload: location });\n      } catch (error) {\n        console.error('Error parsing saved location:', error);\n      }\n    }\n  }, []);\n\n  // Check geolocation permission on mount\n  useEffect(() => {\n    if (navigator.permissions) {\n      navigator.permissions.query({ name: 'geolocation' }).then((result) => {\n        dispatch({ type: 'SET_PERMISSION', payload: result.state === 'granted' });\n        \n        result.addEventListener('change', () => {\n          dispatch({ type: 'SET_PERMISSION', payload: result.state === 'granted' });\n        });\n      });\n    }\n  }, []);\n\n  const value: LocationContextType = {\n    ...state,\n    getCurrentLocation,\n    setLocation,\n    clearError,\n  };\n\n  return (\n    <LocationContext.Provider value={value}>\n      {children}\n    </LocationContext.Provider>\n  );\n}\n\nexport function useLocation() {\n  const context = useContext(LocationContext);\n  if (context === undefined) {\n    throw new Error('useLocation must be used within a LocationProvider');\n  }\n  return context;\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}